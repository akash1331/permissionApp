# Generated by Django 3.0.8 on 2022-03-30 13:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_id', models.CharField(default='S', max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('roll_no', models.CharField(max_length=10, null=True)),
                ('parent_phone', models.IntegerField(blank=True, null=True)),
                ('student_phone', models.IntegerField(blank=True, null=True)),
                ('branch', models.CharField(max_length=8, null=True)),
                ('hostler', models.BooleanField(default=False)),
                ('grantedby', models.CharField(blank=True, max_length=50)),
                ('dp', models.ImageField(null=True, upload_to='profileDp')),
                ('type_of_account', models.CharField(choices=[('STUDENT', 'student'), ('SECURITY', 'security'), ('ADMIN', 'admin'), ('SUPERADMIN', 'superadmin')], default='STUDENT', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
